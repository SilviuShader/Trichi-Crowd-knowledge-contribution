@using System.Text.RegularExpressions
@{
    ViewBag.ChaptersCount = 1;
    ViewBag.Chapters = new List<string> { "" };
    ViewBag.Titles = new List<string> { "" };
    if (@Model.Content != null)
    {
        var chapterContents = Regex.Split((string)@Model.Content, @"\[chapter\][\s\S]+?\[\/chapter\]", RegexOptions.IgnoreCase).ToArray();
        ViewBag.ChaptersCount = chapterContents.Length - 1;

        if (ViewBag.ChaptersCount != 0)
        {
            ViewBag.Chapters = chapterContents.Skip(1).ToList();


            var titlesMatch = Regex.Matches((string)@Model.Content, @"\[chapter\][\s\S]+?\[\/chapter\]", RegexOptions.IgnoreCase).Cast<Match>()
                .Select(m => m.Value)
                .ToArray();

            ViewBag.Titles = new List<string>();

            foreach (var title in titlesMatch)
            {
                string newTitle;
                newTitle = title.Replace("[/chapter]", "");
                newTitle = newTitle.Replace("[chapter]", "");
                ViewBag.Titles.Add(newTitle);
            }
        }
        else
        {
            ViewBag.ChaptersCount = 1;
        }
    }
}

<div class="panel-heading-custom panel-heading heading">
    <h3 class="font-weight-bold">@Model.Title</h3>
</div>

<div class="panel-body-custom panel-body">
    <div class="article-content-wrapper">
        @{
            var i = 0;
            foreach (var chapter in @ViewBag.Chapters)
            {
                <h1>@ViewBag.Titles[i]</h1>
                @Html.Raw(chapter)
                <br/>
                i++;
            }
        }
    </div>
</div>

<div class="article-meta">

    <div class="panel-bottom-details">
        <i class="glyphicon glyphicon-user"></i>
        <i>Scris de </i> <strong> @Model.User.UserName </strong>
        <br/>
        <i class="glyphicon glyphicon-time"></i>
        @Model.LastModified
        <br/>
        <a class="custom-a" href="/DomainArticles/Index/@Model.Domain.DomainName">
            <i class="glyphicon glyphicon-globe"></i>
            @Model.Domain.DomainName
        </a>
    </div>
    
    <br/>

</div>